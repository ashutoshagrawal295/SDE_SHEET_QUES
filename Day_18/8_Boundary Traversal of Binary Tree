#You have been given a binary tree of integers. Your task is to print the boundary nodes of this binary tree in Anti-Clockwise direction starting from the root node.
The boundary nodes include nodes from the left boundary,right boundary and the leaf nodes without duplicate nodes.However,the values from the nodes may contain duplicates

##Approach 1

void leaf(TreeNode<int>*root,vector<int>&v)
{
    if(root)
    {
        if(!root->left&&!root->right)
        {
            v.push_back(root->data);
            return ;
        }
        leaf(root->left,v);
        leaf(root->right,v);
    }
}
vector<int> traverseBoundary(TreeNode<int>* p){
    TreeNode<int>* root=p->left;
    vector<int> v;
    v.push_back(p->data);
    if(!p->left&&!p->right)
    {
        return v;
    }
    if(root)
    {
        while(root->left||root->right)
        {
            v.push_back(root->data);
            if(root->left)
            {
                root=root->left;
            }
            else
            {
                root=root->right;
            }
        }
    }
    leaf(p,v);
    vector<int> s;
    root=p->right;
    if(root)
    {
        while(root->left||root->right)
        {
            s.push_back(root->data);
            if(root->right)
            {
                root=root->right;
            }
            else
            {
                root=root->left;
            }
        }
        while(!s.empty())
        {
            v.push_back(s.back());
            s.pop_back();
        }
    }
    return v;
}

**Time Complexity- O(n)
**Space Complexity-O(1)
