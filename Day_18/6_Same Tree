#Given the roots of two binary trees p and q, write a function to check if they are the same or not.
 Two binary trees are considered the same if they are structurally identical, and the nodes have the same value.
 
##Approach 1

Find inorder and preorder/postorder traversal if they r same then trees ae same.

**Time Complexity- O(n)
**Space Complexity-O(n)

##Approach 2

class Solution {
public:
    bool isSameTree(TreeNode* p, TreeNode* q) {
        if(p&&q)
        {
            if(p->val==q->val)
            {
                if(!isSameTree(p->left,q->left)||!isSameTree(p->right,q->right))
                {
                    return 0;
                }
                else
                {
                    return 1;
                }
            }
            else
            {
                return 0;
            }
        }
        else if(!p&&!q)
        {
            return 1;
        }
        else
        {
            return 0;
        }
    }
};

**Time Complexity- O(n)
**Space Complexity-O(1)
