#Given arrival and departure times of all trains that reach a railway station.Find the minimum number of platforms required for the railway station so that no train
 is kept waiting.Consider that all the trains arrive on the same day and leave on the same day. Arrival and departure time can never be the same for a train but we can 
 have arrival time of one train equal to departure time of the other. At any given instance of time, same platform can not be used for both departure of a train 
 and arrival of another train. In such cases, we need different platforms.
 
##Approach 1

int countPlatforms(int n,int arr[],int dep[])
 {
    int ans=1; //final value
    for(int i=0;i<=n-1;i++)
    {
        int count=1;
        for(int j=i+1;j<=n-1;j++)
        {
            if((arr[i]>=arr[j] && arr[i]<=dep[j]) ||
           (arr[j]>=arr[i] && arr[j]<=dep[i]))
           {
               count++;
           }
        }
        ans=max(ans,count); 
    }
    return ans;
 }

**Time Compexity- O(n*n)
**Space Complexity- O(1)

##Approach 2

class Solution{
    public:
    int findPlatform(int arr[], int dep[], int n)
    {
    	sort(arr,arr+n);
    	sort(dep,dep+n);
    	int i=1,j=0,c=1,max=0;
    	while(i<n&&j<n){
        	if(arr[i]<=dep[j])
        	{
        	    i++;
        	    c++;
        	}
        	else
        	{
        	    c--;
        	    j++;
        	}
        	if(c>max)
        	{
        	    max=c;
        	}
    	}
    	return max;
    }
};

**Time Compexity- O(n*logn)
**Space Complexity- O(1)
