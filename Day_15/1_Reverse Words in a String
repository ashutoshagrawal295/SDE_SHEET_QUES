#Given an input string s, reverse the order of the words.Return a string of the words in reverse order concatenated by a single space.
Note that s may contain leading or trailing spaces or multiple spaces between two words. The returned string should only have a single space separating the words.

##Approach 1

class Solution {
public:
    string reverseWords(string s) {
        stack<string> st;
        int i;
        string str="";
        for(i=0;i<s.length();i++)
        {
            if(s[i]==' ')
            {
                if(str!="")
                {
                    st.push(str);
                    str="";
                }
            }
            else 
            {
                str+=s[i];
            }
        }
        if(str!="")
        {
            st.push(str);
        }
        string ans="";
        while(st.size()!=1)
        {
            ans+=st.top()+" ";
            st.pop();
        }
        ans+=st.top();
        return ans;
    }
};

**Time Complexity- O(n)
**Space Complexity- O(n)

##Approach 2

class Solution {
public:
    string reverseWords(string s) {
        string ans;
        string word="";
        int i;
        for(i=s.length()-1;i>=0;i--)
        {
            if(s[i]==' ')
            {
                while(i>=0&&s[i]==' ')
                {
                    i--;
                }
                ans+=word;
                word="";
                if(ans!=""&&i>=0)
                {
                    ans+=' ';
                }
                i++;
            }
            else
            {
                word=s[i]+word;
            }
        }
        if(word!="")
        {
            ans+=word;
        }
        return ans;
    }
};

**Time Complexity- O(n)
**Space Complexity- O(n)
