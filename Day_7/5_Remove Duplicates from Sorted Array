#Given an integer array nums sorted in non-decreasing order, remove the duplicates in-place such that each unique element appears only once. 
 The relative order of the elements should be kept the same.Return k after placing the final result in the first k slots of nums.
 
 ##Approach 1

int removeDuplicates(vector<int>& arr) {
  set < int > set;
  for (int i = 0; i < arr.size(); i++) {
    set.insert(arr[i]);
  }
  int k = set.size();
  int j = 0;
  for (int x: set) {
    arr[j++] = x;
  }
  return k;
}

**Time Complexity-O(n*logn)
**Space Complexity-O(n)

##Approach 2

int removeDuplicates(vector<int>& arr) {
  int i = 0;
  for (int j = 1; j < arr.size(); j++) {
    if (arr[i] != arr[j]) {
      i++;
      arr[i] = arr[j];
    }
  }
  return i + 1;
}

**Time Complexity-O(n)
**Space Complexity-O(1)
