#Given a matrix of integers A of size N x M in which each row is sorted.Find an return the overall median of the matrix A.

##Approach 1

put all elements in a n*m size 1D array and sort it return middle element

**Time Complexity- O(n*m*log(n*m))
**Space Complexity- O(n*m)

##Approach 2

int count(int mid,vector<vector<int> > &v)
{
    int sum=0;
    for(int i=0;i<v.size();i++)
    {
        sum+=(upper_bound(v[i].begin(), v[i].end(), mid)-v[i].begin());
    }
    return sum;
}
int Solution::findMedian(vector<vector<int> > &A) {
    int l=1,h=1000000000;
    int n=A.size(),m=A[0].size();
    int mid;
    while(l<h)
    {
        mid=l+(h-l)/2;
        int k=count(mid,A);
        if(k<=n*m/2)
        {
            l=mid+1;
        }
        else
        {
            h=mid;
        }
    }
    return l;
}


**Time Complexity- O(32*n*logm)
**Space Complexity- O(1)
