#Given an unsorted array of size n. Array elements are in the range of 1 to n. One number from set {1, 2, â€¦n} is missing and one number occurs twice in the array. 
 Find these two numbers.
 
 ##Approach 1

vector<int> find_missing_repeating(vector<int> array)
{
    int n = array.size() + 1;
    vector<int> substitute(n, 0); 
    vector<int> ans;   
    for (int i = 0; i < array.size(); i++)
    {
        substitute[array[i]]++;
    }
    for (int i = 1; i <= array.size(); i++)
    {
        if (substitute[i] == 0 || substitute[i] > 1)
        {
            ans.push_back(i);
        }
    }
    return ans;
}
  
**Time Complexity- O(n)
**Space Complexity- O(n)

##Approach 2

vector<int>missing_repeated_number(const vector<int> &A) {
    long long int len = A.size();
    long long int S = (len * (len+1) ) /2;
    long long int P = (len * (len +1) *(2*len +1) )/6;
    long long int missingNumber=0, repeating=0;
    for(int i=0;i<A.size(); i++){
       S -= (long long int)A[i];
       P -= (long long int)A[i]*(long long int)A[i];
    }     
    missingNumber = (S + P/S)/2;
    repeating = missingNumber - S;
    vector <int> ans;
    ans.push_back(repeating);
    ans.push_back(missingNumber);
    return ans;
}
  
**Time Complexity- O(n)
**Space Complexity- O(1)

##Approach 3

vector < int >Solution::repeatedNumber (const vector < int >&arr) {
    int xor1;
    int set_bit_no;
    int i;
    int x = 0;
    int y = 0; 
    int n = arr.size();
    xor1 = arr[0];
    for (i = 1; i < n; i++)
        xor1 = xor1 ^ arr[i]^i;
    set_bit_no = xor1 & ~(xor1 - 1);
    for (i = 0; i < n; i++) {
        if (arr[i] & set_bit_no)
            x = x ^ arr[i];
        else
            y = y ^ arr[i];
    }
    for (i = 1; i <= n; i++) {
        if (i & set_bit_no)
            x = x ^ i;
        else
            y = y ^ i;
    }
    int x_count = 0;
    for (int i=0; i<n; i++) {
        if (arr[i]==x)
            x_count++;
    }
    if (x_count==0)
        return {y, x}; 
    return {x, y};
}
  
**Time Complexity- O(n)
**Space Complexity- O(1)
